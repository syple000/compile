PROG

PROG CLASS PROG
PROG NULL

CLASS QUAL_1 class ID {BLOCK};

QUAL_1 static QUAL_2
QUAL_1 QUAL_2
QUAL_1 NULL

QUAL_2 final QUAL_3
QUAL_2 QUAL_3
QUAL_2 NULL

QUAL_3 public
QUAL_3 private
QUAL_3 protected
QUAL_3 NULL

BLOCK QUAL_1 DECL; BLOCK
BLOCK QUAL_1 FUNC BLOCK
BLOCK NULL

TYPE int
TYPE float
TYPE double
TYPE boolean
TYPE char
TYPE void
TYPE ID

DECL TYPE ID
DECL TYPE ID = EXPR

FUNC TYPE ID(PARAMS) {EXPRS}
FUNC ID(PARAMS) {EXPRS}

PARAMS DECL PARAM
PARAMS NULL

PARAM ,DECL PARAM
PARAM NULL

EXPRS EXPR; EXPRS
EXPRS DECL; EXPRS
EXPRS if (EXPR) {EXPRS} EXPRS
EXPRS if (EXPR) {EXPRS} else {EXPRS} EXPRS 
EXPRS NULL

EXPR EXPR BOP EXPR
EXPR EXPR RMOP
EXPR LMOP EXPR
EXPR ID ID(ARGS)
EXPR ID(ARGS)
EXPR ID
EXPR NUM

ARGS EXPR ARG
ARGS NULL

ARG , EXPR ARG
ARG NULL

BOP <
BOP >
BOP >=
BOP <=
BOP =
BOP +
BOP -
BOP *
BOP /
BOP ==

LMOP new
LMOP return

RMOP ++
RMOP --
